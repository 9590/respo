
[
[ "ns" "respo.util.format" [ ":require" [ "[]" "clojure.string" ":as" "string" ] [ "[]" "respo.util.detect" ":refer" [ "[]" "component?" "element?" ] ] ] ]
[ "defn" "dashed->camel" [ [ "x" ] [ "dashed->camel" "|" "x" "false" ] ] [ [ "acc" "piece" "promoted?" ] [ "if" [ "=" "piece" "|" ] "acc" [ "let" [ [ "cursor" [ "get" "piece" "0" ] ] [ "piece-followed" [ "subs" "piece" "1" ] ] ] [ "if" [ "=" "cursor" "|-" ] [ "recur" "acc" "piece-followed" "true" ] [ "recur" [ "str" "acc" [ "if" "promoted?" [ "string/upper-case" "cursor" ] "cursor" ] ] "piece-followed" "false" ] ] ] ] ] ]
[ "defn" "prop->attr" [ "x" ] [ "case" "x" [ "|class-name" "|class" ] "x" ] ]
[ "defn" "event->string" [ "x" ] [ "subs" [ "name" "x" ] "3" ] ]
[ "defn" "event->prop" [ "x" ] [ "str" "|on" [ "name" "x" ] ] ]
[ "defn" "event->edn" [ "event" ] [ "--" ".log" "js/console" "|simplify event:" "event" ] [ "->" [ "case" [ ".-type" "event" ] [ "|click" [ "{}" ":type" ":click" ] ] [ "|keydown" [ "{}" ":type" ":keydown" ":key-code" [ ".-keyCode" "event" ] ] ] [ "|keyup" [ "{}" ":type" ":keyup" ":key-code" [ ".-keyCode" "event" ] ] ] [ "|input" [ "{}" ":type" ":input" ":value" [ ".-value" [ ".-target" "event" ] ] ] ] [ "|change" [ "{}" ":type" ":change" ":value" [ ".-value" [ ".-target" "event" ] ] ] ] [ "|focus" [ "{}" ":type" ":focus" ] ] [ "{}" ":type" [ ".-type" "event" ] ":msg" [ "str" "|Unhandled event: " [ ".-type" "event" ] ] ] ] [ "assoc" ":original-event" "event" ] ] ]
[ "defn" "purify-events" [ "events" ] [ "->>" "events" [ "map" [ "fn" [ "entry" ] [ "[]" [ "key" "entry" ] "true" ] ] ] [ "into" [ "{}" ] ] ] ]
[ "defn" "purify-element" [ "markup" ] [ "if" [ "nil?" "markup" ] "nil" [ "if" [ "component?" "markup" ] [ "recur" [ ":tree" "markup" ] ] [ "into" [ "{}" ] [ "->" "markup" [ "update" ":event" "purify-events" ] [ "update" ":children" [ "fn" [ "children" ] [ "->>" "children" [ "mapv" [ "fn" [ "entry" ] [ "[]" [ "first" "entry" ] [ "purify-element" [ "last" "entry" ] ] ] ] ] ] ] ] ] ] ] ] ]
[ "defn" "rigidify-element" [ "element" ] [ "if" [ "component?" "element" ] [ "recur" [ ":tree" "element" ] ] [ "->" "element" [ "update" ":event" [ "fn" [ "events" ] [ "list" ] ] ] [ "update" ":children" [ "fn" [ "children" ] [ "->>" "children" [ "mapv" [ "fn" [ "entry" ] [ "[]" [ "first" "entry" ] [ "rigidify-element" [ "last" "entry" ] ] ] ] ] ] ] ] ] ] ]
]
